I"ß<h2 id="geolocation-changes-overview">Geolocation Changes Overview</h2>

<p>Initially, in the first phase of my data cleaning, I used the GeoNames API to create a list of valid city-state combinations to filter the dataset. However due to constraints of using a free account, I had to limit my analysis to just <strong>4 states</strong> and their respective cities. This yielded me <strong>274</strong> rows.</p>

<p>Before creating my <code class="language-plaintext highlighter-rouge">Geolocation_Final</code> table, I decided to change the source of my city-state combinations to a publication by the <strong>IBGE</strong> <em>(Brazilian Institute of Geography and Statistics)</em>. This dataset, from 2022, contains a complete list of all municipalities and federative units in Brazil, providing a more comprehensive and current basis for filtering.</p>

<p>Using the IBGE dataset allowed me to increase the number of valid city-state combinations in my dataset from <strong>274</strong> to <strong>5,289</strong> entriesâ€”an increase of <strong>5,015 entries</strong>.</p>

<h3 id="impact">Impact</h3>
<ul>
  <li>
    <p>By filtering the city-state list in Google BigQuery, I was able to apply this filter directly across all related tables. This eliminated the need for the filter logic in my Power BI DAX queries, such as the line <code class="language-plaintext highlighter-rouge">LOOKUPVALUE(Customers[customer_state], Customers[customer_id], RELATED(Orders[customer_id])) IN {"SP", "RJ", "MG", "BA"}</code>. Previously, I had to include this line in every measure and calculated column dealing with customer IDs.</p>
  </li>
  <li>
    <p>By incorporating this filter in Google BigQuery, my Power BI measures and DAX queries are now cleaner and more readable, allowing for easier maintenance and improved performance.</p>
  </li>
</ul>

<p><a href="./steps.md">Click here</a> to read the detailed steps on the creation of <code class="language-plaintext highlighter-rouge">Geolocation_Final</code>.</p>

:ET